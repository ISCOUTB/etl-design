syntax = "proto3";

package dtypes;

// Tipos de nodos en el Árbol de Sintaxis Abstracta (AST)
// para representar expresiones de Excel
enum AstType {
    AST_UNKNOWN = 0;           // Nodo desconocido o no reconocido
    AST_BINARY_EXPRESSION = 1;  // Expresiones binarias como +, -, *, /
    AST_CELL_RANGE = 2;         // Rangos de celdas como A1:B5
    AST_FUNCTION = 3;           // Funciones como SUM(), AVERAGE()
    AST_CELL = 4;               // Referencias a celdas individuales como A1
    AST_NUMBER = 5;             // Valores numéricos literales
    AST_LOGICAL = 6;            // Valores booleanos (TRUE/FALSE)
    AST_TEXT = 7;               // Cadenas de texto literales
}

/**
 * Tipos de referencia para celdas de Excel
 */
enum RefType {
    REF_UNKNOWN = 0;   // Referencia desconocida o no reconocida
    REF_RELATIVE = 1;  // Referencias relativas como A1
    REF_ABSOLUTE = 2;  // Referencias absolutas como $A$1
    REF_MIXED = 3;     // Referencias mixtas como $A1 o A$1
}

/**
 * Nodo del Árbol de Sintaxis Abstracta para expresiones de Excel.
 * Representa la estructura jerárquica de una fórmula parseada.
 */
message AST {
    AstType type = 1;                // Tipo de nodo AST
    optional string operator = 2;    // Operador para expresiones binarias
    optional AST left = 3;           // Hijo izquierdo para expresiones binarias
    optional AST right = 4;          // Hijo derecho para expresiones binarias
    repeated AST arguments = 5;      // Lista de argumentos para funciones
    optional string name = 6;        // Nombre de función o celda
    optional RefType refType = 7;    // Tipo de referencia para celdas
    optional string key = 8;         // Clave identificadora
    optional float value = 9;        // Valor numérico para literales
}

/**
  * Representa los tokens generados durante el parseo de una fórmula de Excel.
  * Cada token contiene información sobre su valor, tipo y subtipo.
*/
message Tokens {
    /**
      * Representa un token individual en la fórmula.
      * Contiene el valor del token, su tipo y subtipo.
    */
    message Token {
        string value = 1;       // Valor del token
        string type = 2;         // Tipo del token (ej. número, operador, función)
        string subtype = 3;      // Subtipo del token (ej. numerica, lógico, etc.)
    }
    repeated Token tokens = 1;  // Lista de tokens en la fórmula
}
