services:
  rabbitmq:
    image: rabbitmq:4-management
    container_name: etl-rabbitmq
    env_file:
      - ../.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - "5672:${RABBITMQ_PORT}"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - etl-network
  
  mongodb:
    image: mongo:7
    container_name: etl-mongodb
    env_file:
      - ../.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:${MONGO_PORT}"
    volumes:
      - mongodb_data:/data/db
    networks:
      - etl-network

  typechecking-api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    container_name: etl-typechecking-api
    depends_on:
      - rabbitmq
      - mongodb
    env_file:
      - ../.env
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "${RABBITMQ_PORT}"
      RABBITMQ_VHOST: "${RABBITMQ_VHOST}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASSWORD: "${RABBITMQ_PASSWORD}"
      MAX_WORKERS: "${MAX_WORKERS}"
      WORKER_PREFETCH_COUNT: "${WORKER_PREFETCH_COUNT}"
      API_V1_STR: "${API_V1_STR}"
      CORS_ORIGINS: "${CORS_ORIGINS}"
      MONGO_PORT: "${MONGO_PORT}"
      MONGO_HOST: mongodb
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_DB: "${MONGO_DB}"
      MONGO_COLLECTION: "${MONGO_COLLECTION}"
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - etl-network
  
  typechecking-worker:
    build: ../app
    container_name: etl-typechecking-worker
    command: python -m app.workers.validation_worker
    depends_on:
      - rabbitmq
      - mongodb
    env_file:
      - ../.env
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGO_HOST: mongodb
    networks:
      - etl-network
    deploy:
      replicas: ${WORKER_CONCURRENCY}

volumes:
  rabbitmq_data:
  mongodb_data:

networks:
  etl-network:
    driver: bridge